#!/usr/bin/python
#coding=utf-8
print(__doc__)


# Code source: Jaques Grobler
# License: BSD 3 clause
import matplotlib.pyplot as plt  #绘图
import numpy as np               #科学计算库

#获取np矩阵
#=================================================
array = np.array([[1,2,3],
                  [2,3,4]])
print  '获取np矩阵',array
#获取0矩阵
array = np.zeros((3,5),dtype=np.int64)    #3行5列
print '获取0矩阵',array
array = np.ones((4,3),dtype=np.int64)
print '获取1矩阵',array
#生成有序数列
array =np.arange(10,20,2)
print 'arange的数列',array
array =np.arange(20).reshape((-1,1))
print 'arange.reshape的数列',array
#生成线段
array =np.linspace(1,10,6).reshape((2,3))
print 'linspace数列',array
print '=========================================='
#numpy的运算
#=================================================
#简单数列运算
a = np.array([10,20,30,40])
b = np.arange(4)
print 'a:',a,'     b:',b
print 'a + b = ',a+b
print 'b**2  =' ,b**2
print '10*np.sin(a)=',10*np.sin(a)
print 'b里面的元素有哪些是等于3的',b==3
#矩阵运算
a = np.array([[1,1],[0,1]])
b = np.arange(4).reshape(2,2)
print 'a:\n',a
print 'b:\n',b
print '矩阵的点乘:a * b = \n',a*b
print '矩阵的叉乘:np.dot(a,b)\n',np.dot(a,b) #a.dot(b)是另一种表达方式
a = np.random.random((2,4)) #随机生成的一个2行4列的矩阵
print '矩阵里的总和',np.sum(a,axis=0)#axis0代表维度列
print '矩阵里的最小值',np.min(a)
print '矩阵里的最大值',np.max(a)
a = np.arange(2,14).reshape((3,4))
print a
print '矩阵里的最小值的位置',np.argmin(a) #加arg的都是索引
print '矩阵里的最大值的位置',np.argmax(a)
print '矩阵的平均值',np.mean(a,axis=-1)
print '矩阵的转置\n',np.transpose(a)  #或者是a.T在
print 'np.clip(a,5,9\n)',np.clip(a,5,9)
y = np.array([0, 1, 1, 0, 1, 0, 0,3,3,3])
print  np.unique(y)# unique函数去除其中重复的元素，并按元素由小到大返回一个新的无元素重复的元组或者列表
#矩阵的切片

print ('shape',array.shape)       #p
print ('number of dim',array.ndim)#判断几维数组
print ('size',array.size) #判断数组有几个元素


print array
#reshape(行,列)
a = np.arange(0,12).reshape(-1,1)#这里-1代表的是任何正整数,即将数组全部转化为一列
print 'a.reshape',a

a=np.array([2,3,4],dtype=np.float)  #定义数组
print a.dtype

# 最小维度
a = np.array([1,  2,  3,4,5], ndmin =  2)
print (a)

#希尔伯特矩阵 Hilbert matrix
X = 1. / (np.arange(1, 11) + np.arange(0, 10)[:, np.newaxis])
#newaxis是在相应的轴上添加一个维度
print np.arange(1,11)
print np.arange(0, 10)[:, np.newaxis]
print np.arange(1, 11) + np.arange(0, 10)[:, np.newaxis]
print np.arange(1,3)+np.arange(1,3)
a=np.ones(10)
print 'np.ones的维度',a.ndim
#np.logspace
# 返回在对数刻度上均匀间隔的数字
N=10
n_alphas = 200
print np.logspace(-10, -2, n_alphas)
x1 =np.logspace(0.1,1,N,endpoint=True)
x2 =np.logspace(0.1,1,N,endpoint=False)
y = np.zeros(N)
#plt.plot(x1, y, 'o')
#plt.plot(x2, y + 0.5, 'o')
#plt.ylim([-0.5, 1])
#plt.show()



print np.array([[0,0],[1,1],[2,2]])


















